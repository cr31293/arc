[{"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\index.js":"1","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\reportWebVitals.js":"2","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\App.js":"3","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\components\\ui\\theme.js":"4","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\components\\ui\\Header.js":"5","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\components\\ui\\Footer.js":"6"},{"size":478,"mtime":1609608779087,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1609608779088,"results":"9","hashOfConfig":"8"},{"size":1911,"mtime":1609988815659,"results":"10","hashOfConfig":"8"},{"size":732,"mtime":1609608779087,"results":"11","hashOfConfig":"8"},{"size":9299,"mtime":1609989428840,"results":"12","hashOfConfig":"8"},{"size":7420,"mtime":1609992613887,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1yar8ls",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\index.js",[],["28","29"],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\reportWebVitals.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\App.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\components\\ui\\theme.js",[],"C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\components\\ui\\Header.js",["30","31"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport logo from \"../../assets/logo.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"2em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginBottom: \"1.25em\",\n    },\n  },\n  logo: {\n    height: \"8em\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"7em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"5.5em\",\n    },\n  },\n  logoContainer: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  tabContainer: {\n    marginLeft: \"auto\",\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"25px\",\n  },\n  button: {\n    ...theme.typography.estimate,\n    borderRadius: \"50px\",\n    marginLeft: \"50px\",\n    marginRight: \"25px\",\n    height: \"45px\",\n  },\n  menu: {\n    backgroundColor: theme.palette.common.blue,\n    color: \"white\",\n    borderRadius: \"0px\",\n  },\n  menuItem: {\n    ...theme.typography.tab,\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n  drawerIcon: {\n    height: \"50px\",\n    width: \"50px\"\n  },\n  drawerIconContainer: {\n      marginLeft: \"auto\",\n      \"&:hover\": {\n          backgroundColor: \"transparent\"\n      },\n  },\n  drawer: {\n      backgroundColor: theme.palette.common.blue\n  },\n  drawerItem: {\n      ...theme.typography.tab,\n      color: \"white\",\n      opacity: 0.7\n  },\n  drawerItemEstimate: {\n      backgroundColor: theme.palette.common.orange,\n      \"&:hover\": {\n          backgroundColor: theme.palette.common.orange\n      }\n  },\n  drawerItemSelected: {\n      \"& .MuiListItemText-root\": {\n          opacity: 1\n      }\n  },\n  appbar: {\n      zIndex: theme.zIndex.modal + 1\n  }\n}));\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n\n  const handleChange = (e, value) => {\n    props.setValue(value);\n  };\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n    setOpenMenu(true);\n  };\n\n  const handleMenuItemClick = (e, i) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n    props.setSelectedIndex(i);\n  };\n\n  const handleClose = (e) => {\n    setAnchorEl(null);\n    setOpenMenu(false);\n  };\n\n  const menuOptions = [\n    { name: \"Services\", link: \"/services\", activeIndex: 1, selectedIndex: 0 },\n    { name: \"Custom Software Development\", link: \"/customsoftware\", activeIndex: 1, selectedIndex: 1  },\n    { name: \"Mobile App Development\", link: \"/mobileapps\", activeIndex: 1, selectedIndex: 2  },\n    { name: \"Website Development\", link: \"/websites\", activeIndex: 1, selectedIndex: 3  },\n  ];\n\n  const routes = [\n      { name: \"Home\", link: \"/\", activeIndex: 0 },\n      { name: \"Services\", link: \"/services\", activeIndex: 1, ariaOwns: anchorEl ? \"simple-menu\" : undefined, ariaPopup: anchorEl ? \"true\" : undefined, mouseOver: (event) => handleClick(event)  },\n      { name: \"The Revolution\", link: \"/revolution\", activeIndex: 2  },\n      { name: \"About Us\", link: \"/about\", activeIndex: 3  },\n      { name: \"Contact Us\", link: \"/contact\", activeIndex: 4  },\n  ]\n\n  useEffect(() => {\n    [...menuOptions, ...routes].forEach(route => {\n        switch (window.location.pathname) {\n            case `${route.link}`:\n                if (props.value !== route.activeIndex) {\n                    props.setValue(route.activeIndex)\n                    if (route.selectedIndex && route.selectedIndex !== props.selectedIndex) {\n                        props.setSelectedIndex(route.selectedIndex)\n                    }\n                }\n                break;\n                default:\n                break;\n        }\n    })\n  }, [props.value, menuOptions, props.selectedIndex, routes, props]);\n\n  const tabs = (\n    <>\n      <Tabs\n        value={props.value}\n        onChange={handleChange}\n        className={classes.tabContainer}\n      >\n          {routes.map((route, index) => (\n              <Tab \n              key={`${route}${index}`} \n              className={classes.tab} \n              component={Link} \n              to={route.link} \n              label={route.name}\n              aria-owns={route.ariaOwns} \n              aria-haspopup={route.ariaPopup}\n              onMouseOver={route.mouseOver} />\n          ))}\n      </Tabs>\n      <Button className={classes.button} variant=\"contained\" color=\"secondary\">\n        Free Estimate\n      </Button>\n      <Menu\n        classes={{ paper: classes.menu }}\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={handleClose}\n        MenuListProps={{ onMouseLeave: handleClose }}\n        elevation={0}\n        style={{zIndex: 1302}}\n        keepMounted\n      >\n        {menuOptions.map((option, i) => (\n          <MenuItem\n            key={`${option}${i}`}\n            component={Link}\n            to={option.link}\n            classes={{ root: classes.menuItem }}\n            onClick={(event) => {\n              handleMenuItemClick(event, i);\n              props.setValue(1);\n              handleClose();\n            }}\n            selected={i === props.selectedIndex && props.value === 1}\n          >\n            {option.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n\n  const drawer = (\n    <>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => setOpenDrawer(true)}\n        classes={{paper: classes.drawer}}\n      >\n        <div className={classes.toolbarMargin} />\n        <List disablePadding>\n            {routes.map((route) => (\n                <ListItem \n                divider\n                key={`${route}${route.activeIndex}`} \n                button \n                component={Link} \n                to={route.link} \n                selected={props.value === route.activeIndex} \n                onClick={() => {\n                    setOpenDrawer(false); props.setValue(route.activeIndex)\n                }}\n                classes={{selected: classes.drawerItemSelected}}\n                >\n                    <ListItemText \n                    className={classes.drawerItem} \n                    disableTypography\n                    >\n                        {route.name}\n                    </ListItemText>\n                </ListItem>\n            ))}\n            <ListItem\n            classes={{root: classes.drawerItemEstimate, selected: classes.drawerItemSelected}}\n             component={Link} \n             to=\"/estimate\" \n             selected={props.value === 5}\n             onClick={() => {\n                 setOpenDrawer(false); props.setValue(5)\n             }} \n             divider\n             button\n             >\n                <ListItemText \n                className={classes.drawerItem}\n                disableTypography>\n                    Free Estimate\n                </ListItemText>\n            </ListItem>\n        </List>\n\n      </SwipeableDrawer>\n      <IconButton className={classes.drawerIconContainer} onClick={() => setOpenDrawer(!openDrawer)} disableRipple>\n        <MenuIcon className={classes.drawerIcon}/>\n      </IconButton>\n    </>\n  );\n\n  return (\n    <>\n      <ElevationScroll>\n        <AppBar className={classes.appbar} position=\"fixed\">\n          <ToolBar disableGutters>\n            <Button\n              className={classes.logoContainer}\n              component={Link}\n              to=\"/\"\n              onClick={() => {\n                props.setValue(0);\n              }}\n              disableRipple\n            >\n              <img alt=\"company logo\" src={logo} className={classes.logo} />\n            </Button>\n            {matches ? drawer : tabs}\n          </ToolBar>\n        </AppBar>\n      </ElevationScroll>\n      <div className={classes.toolbarMargin} />\n    </>\n  );\n}\n","C:\\Users\\cwr31\\OneDrive\\Desktop\\Projects\\working\\arc\\src\\components\\ui\\Footer.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":154,"column":9,"nodeType":"38","endLine":159,"endColumn":4},{"ruleId":"36","severity":1,"message":"39","line":161,"column":9,"nodeType":"38","endLine":167,"endColumn":4},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","The 'menuOptions' array makes the dependencies of useEffect Hook (at line 184) change on every render. To fix this, wrap the initialization of 'menuOptions' in its own useMemo() Hook.","VariableDeclarator","The 'routes' array makes the dependencies of useEffect Hook (at line 184) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","no-global-assign","no-unsafe-negation"]